{"version":3,"file":"order-summary-drawer-d6b6812c.js","mappings":"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","sources":["webpack://checkout/./packages/core/src/app/order/getLineItemsCount.ts","webpack://checkout/./packages/core/src/app/order/OrderSummaryModal.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryDrawer.tsx","webpack://checkout/./packages/core/src/app/ui/modal/ModalTrigger.tsx"],"sourcesContent":["import { LineItemMap } from '@bigcommerce/checkout-sdk';\n\nexport default function getLineItemsCount({\n    physicalItems,\n    digitalItems,\n    giftCertificates,\n    customItems,\n}: LineItemMap): number {\n    return (\n        physicalItems.length +\n        digitalItems.length +\n        giftCertificates.length +\n        (customItems || []).length\n    );\n}\n","import {\n    LineItemMap,\n    ShopperCurrency as ShopperCurrencyType,\n    StoreCurrency,\n} from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, ReactNode } from 'react';\n\nimport { preventDefault } from '../common/dom';\nimport { TranslatedString } from '../locale';\nimport { IconClose } from '../ui/icon';\nimport { Modal, ModalHeader } from '../ui/modal';\n\nimport OrderSummaryItems from './OrderSummaryItems';\nimport OrderSummarySection from './OrderSummarySection';\nimport OrderSummarySubtotals, { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\nimport OrderSummaryTotal from './OrderSummaryTotal';\n\nexport interface OrderSummaryDrawerProps {\n    additionalLineItems?: ReactNode;\n    lineItems: LineItemMap;\n    total: number;\n    storeCurrency: StoreCurrency;\n    shopperCurrency: ShopperCurrencyType;\n    isOpen: boolean;\n    headerLink?: ReactNode;\n    onRequestClose?(): void;\n    onAfterOpen?(): void;\n}\n\nconst OrderSummaryModal: FunctionComponent<\n    OrderSummaryDrawerProps & OrderSummarySubtotalsProps\n> = ({\n    additionalLineItems,\n    children,\n    onRequestClose,\n    onAfterOpen,\n    storeCurrency,\n    shopperCurrency,\n    isOpen,\n    headerLink,\n    lineItems,\n    total,\n    ...orderSummarySubtotalsProps\n}) => (\n    <Modal\n        additionalBodyClassName=\"cart-modal-body optimizedCheckout-orderSummary\"\n        additionalHeaderClassName=\"cart-modal-header optimizedCheckout-orderSummary\"\n        header={renderHeader({ headerLink, onRequestClose })}\n        isOpen={isOpen}\n        onAfterOpen={onAfterOpen}\n        onRequestClose={onRequestClose}\n    >\n        <OrderSummarySection>\n            <OrderSummaryItems items={lineItems} />\n        </OrderSummarySection>\n        <OrderSummarySection>\n            <OrderSummarySubtotals \n            {...orderSummarySubtotalsProps}\n            lineitems={lineItems}\n            />\n            {additionalLineItems}\n        </OrderSummarySection>\n        <OrderSummarySection>\n            <OrderSummaryTotal\n                orderAmount={total}\n                shopperCurrencyCode={shopperCurrency.code}\n                storeCurrencyCode={storeCurrency.code}\n            />\n        </OrderSummarySection>\n    </Modal>\n);\n\nconst renderHeader: FunctionComponent<{\n    headerLink: ReactNode;\n    onRequestClose?(): void;\n}> = ({ onRequestClose, headerLink }) => (\n    <>\n        <a className=\"cart-modal-close\" href=\"#\" onClick={preventDefault(onRequestClose)}>\n            <span className=\"is-srOnly\">\n                <TranslatedString id=\"common.close_action\" />\n            </span>\n            <IconClose />\n        </a>\n        <ModalHeader additionalClassName=\"cart-modal-title\">\n            <TranslatedString id=\"cart.cart_heading\" />\n        </ModalHeader>\n\n        {headerLink}\n    </>\n);\n\nexport default OrderSummaryModal;\n","import {\n    LineItemMap,\n    ShopperCurrency as ShopperCurrencyType,\n    StoreCurrency,\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { FunctionComponent, memo, ReactNode, useCallback } from 'react';\nimport { findIndex } from 'lodash';\nimport { ShopperCurrency } from '../currency';\nimport { TranslatedString } from '../locale';\nimport { IconGiftCertificate } from '../ui/icon';\nimport { ModalTrigger } from '../ui/modal';\n\nimport getItemsCount from './getItemsCount';\nimport getLineItemsCount from './getLineItemsCount';\nimport OrderSummaryModal from './OrderSummaryModal';\nimport { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\n\nexport interface OrderSummaryDrawerProps {\n    lineItems: LineItemMap;\n    total: number;\n    headerLink: ReactNode;\n    storeCurrency: StoreCurrency;\n    shopperCurrency: ShopperCurrencyType;\n    additionalLineItems?: ReactNode;\n}\n\nconst OrderSummaryDrawer: FunctionComponent<\n    OrderSummaryDrawerProps & OrderSummarySubtotalsProps\n> = ({\n    additionalLineItems,\n    coupons,\n    discountAmount,\n    giftCertificates,\n    handlingAmount,\n    headerLink,\n    lineItems,\n    onRemovedCoupon,\n    onRemovedGiftCertificate,\n    shippingAmount,\n    shopperCurrency,\n    storeCreditAmount,\n    giftWrappingAmount,\n    storeCurrency,\n    subtotalAmount,\n    taxes,\n    total,\n}) => {\n    const renderModal = useCallback(\n        (props) => (\n            <OrderSummaryModal\n                {...props}\n                additionalLineItems={additionalLineItems}\n                coupons={coupons}\n                discountAmount={discountAmount}\n                giftCertificates={giftCertificates}\n                giftWrappingAmount={giftWrappingAmount}\n                handlingAmount={handlingAmount}\n                headerLink={headerLink}\n                lineItems={lineItems}\n                onRemovedCoupon={onRemovedCoupon}\n                onRemovedGiftCertificate={onRemovedGiftCertificate}\n                shippingAmount={shippingAmount}\n                shopperCurrency={shopperCurrency}\n                storeCreditAmount={storeCreditAmount}\n                storeCurrency={storeCurrency}\n                subtotalAmount={subtotalAmount}\n                taxes={taxes}\n                total={total}\n            />\n        ),\n        [\n            additionalLineItems,\n            coupons,\n            discountAmount,\n            giftCertificates,\n            handlingAmount,\n            headerLink,\n            lineItems,\n            onRemovedCoupon,\n            onRemovedGiftCertificate,\n            giftWrappingAmount,\n            shippingAmount,\n            shopperCurrency,\n            storeCreditAmount,\n            storeCurrency,\n            subtotalAmount,\n            taxes,\n            total,\n        ],\n    );\n\n    const index = findIndex(lineItems!.physicalItems!,{ sku: \"COD1\" }),\n          index2 = findIndex(lineItems!.physicalItems!,{ sku: \"COD2\" }),\n          index3 = findIndex(lineItems!.physicalItems!,{ sku: \"COD3\" }),\n          index4 = findIndex(lineItems!.physicalItems!,{ sku: \"COD4\" });\n\n\n    return (\n        <ModalTrigger modal={renderModal}>\n            {({ onClick, onKeyPress }) => (\n                <div\n                    className=\"cartDrawer optimizedCheckout-orderSummary\"\n                    onClick={onClick}\n                    onKeyPress={onKeyPress}\n                    tabIndex={0}\n                >\n                    <figure\n                        className={classNames('cartDrawer-figure', {\n                            'cartDrawer-figure--stack': getLineItemsCount(lineItems) > 1,\n                        })}\n                    >\n                        <div className=\"cartDrawer-imageWrapper\">{getImage(lineItems)}</div>\n                    </figure>\n                    <div className=\"cartDrawer-body\">\n                    <h3 className=\"cartDrawer-items optimizedCheckout-headingPrimary\">\n                            <TranslatedString\n                                data={{ \n                                    count: \n                                    index > -1 ? getItemsCount(lineItems) - lineItems!.physicalItems[index]!.quantity \n                                    :(index2 > -1 ?\n                                        getItemsCount(lineItems) - lineItems!.physicalItems[index2]!.quantity     \n                                        :\n                                        index3 > -1 ?\n                                        getItemsCount(lineItems) - lineItems!.physicalItems[index3]!.quantity   \n                                        :\n                                        index4 > -1 ?\n                                        getItemsCount(lineItems) - lineItems!.physicalItems[index4]!.quantity   \n                                        : getItemsCount(lineItems) \n                                    )\n                                     } }\n                                id=\"cart.item_count_text\"\n                            />\n                        </h3>\n                        <a>\n                            <TranslatedString id=\"cart.show_details_action\" />\n                        </a>\n                    </div>\n                    <div className=\"cartDrawer-actions\">\n                        <h3 className=\"cartDrawer-total optimizedCheckout-headingPrimary\">\n                            <ShopperCurrency amount={total} />\n                        </h3>\n                    </div>\n                </div>\n            )}\n        </ModalTrigger>\n    );\n};\n\nfunction getImage(lineItems: LineItemMap): ReactNode {\n    const productWithImage = lineItems.physicalItems[0] || lineItems.digitalItems[0];\n\n    if (productWithImage && productWithImage.imageUrl) {\n        return (\n            <img\n                alt={productWithImage.name}\n                data-test=\"cart-item-image\"\n                src={productWithImage.imageUrl}\n            />\n        );\n    }\n\n    if (lineItems.giftCertificates.length) {\n        return <IconGiftCertificate />;\n    }\n}\n\nexport default memo(OrderSummaryDrawer);\n","import React, {\n    Component,\n    KeyboardEvent,\n    KeyboardEventHandler,\n    MouseEventHandler,\n    ReactNode,\n} from 'react';\n\nexport interface ModalTriggerProps {\n    children(props: { onClick: MouseEventHandler; onKeyPress: KeyboardEventHandler }): ReactNode;\n    modal(props: ModalTriggerModalProps): ReactNode;\n}\n\nexport interface ModalTriggerModalProps {\n    isOpen: boolean;\n    onRequestClose(): void;\n}\n\nexport interface ModalTriggerState {\n    isOpen: boolean;\n}\n\nexport default class ModalTrigger extends Component<ModalTriggerProps, ModalTriggerState> {\n    state = {\n        isOpen: false,\n    };\n\n    private canHandleEvent = false;\n\n    componentDidMount(): void {\n        this.canHandleEvent = true;\n    }\n\n    componentWillUnmount(): void {\n        this.canHandleEvent = false;\n    }\n\n    render() {\n        const { children, modal } = this.props;\n        const { isOpen } = this.state;\n\n        return (\n            <>\n                {children({\n                    onClick: this.handleOpen,\n                    onKeyPress: this.handleKeyOpen,\n                })}\n\n                {modal({\n                    isOpen,\n                    onRequestClose: this.handleClose,\n                })}\n            </>\n        );\n    }\n\n    private handleOpen: () => void = () => {\n        if (!this.canHandleEvent) {\n            return;\n        }\n\n        this.setState({\n            isOpen: true,\n        });\n    };\n\n    private handleClose: () => void = () => {\n        if (!this.canHandleEvent) {\n            return;\n        }\n\n        this.setState({\n            isOpen: false,\n        });\n    };\n\n    private handleKeyOpen: (keyboardEvent: KeyboardEvent<HTMLElement>) => void = (\n        keyboardEvent,\n    ) => {\n        if (keyboardEvent.key === 'Enter') {\n            this.handleOpen();\n        }\n    };\n}\n"],"names":["getLineItemsCount","physicalItems","digitalItems","giftCertificates","customItems","length","renderHeader","onRequestClose","headerLink","className","href","onClick","preventDefault","TranslatedString","id","IconClose","ModalHeader","additionalClassName","additionalLineItems","onAfterOpen","storeCurrency","shopperCurrency","isOpen","lineItems","total","orderSummarySubtotalsProps","Modal","additionalBodyClassName","additionalHeaderClassName","header","OrderSummarySection","OrderSummaryItems","items","OrderSummarySubtotals","lineitems","OrderSummaryTotal","orderAmount","shopperCurrencyCode","code","storeCurrencyCode","memo","coupons","discountAmount","handlingAmount","onRemovedCoupon","onRemovedGiftCertificate","shippingAmount","storeCreditAmount","giftWrappingAmount","subtotalAmount","taxes","renderModal","useCallback","props","index","findIndex","sku","index2","index3","index4","ModalTrigger","modal","onKeyPress","tabIndex","productWithImage","imageUrl","alt","name","src","IconGiftCertificate","getImage","data","count","getItemsCount","quantity","ShopperCurrency","amount","state","canHandleEvent","handleOpen","setState","handleClose","handleKeyOpen","keyboardEvent","key","componentDidMount","this","componentWillUnmount","render","children","Component"],"sourceRoot":""}